{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyPress","event","setState","key","document","addEventListener","this","removeEventListener","Component","ReactDOM","render","getElementById"],"mappings":"6LAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,kBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,kBAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,MAAmB,KAAfA,EACK,0BAGU,MAAfA,EACK,gCAGH,2BAAN,OAAkCA,OA5BtC,G,KAAyBS,W,eCDzBC,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.7e50068c.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    if (pressedKey === '') {\n      return 'Nothing was pressed yet';\n    }\n\n    if (pressedKey === ' ') {\n      return 'The last pressed key is Space';\n    }\n\n    return `The last pressed key is ${pressedKey}`;\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}